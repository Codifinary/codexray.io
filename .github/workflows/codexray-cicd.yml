name: CI/CD Pipeline for Codexray

# -------------------------------------
# Triggers: Run on push to main branch
# -------------------------------------
on:
  push:
    branches:
      - main

# -------------------------------------
# Define Environment Variables
# -------------------------------------
env:
  GCR_IMAGE: gcr.io/${{ secrets.GCP_PROJECT_ID }}/codexray:latest
  GKE_CLUSTER: codexray-cluster
  GKE_REGION: asia-south1
  GKE_NAMESPACE: codexray

permissions:
  id-token: write   # Required for Workload Identity Federation
  contents: read    # Required for accessing repository contents

# -------------------------------------
# Job 1: CI - Build, Test, Lint
# -------------------------------------
jobs:
  ci:
    name: CI - Build, Test, Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

# -------------------------------------
# Job 2: Build and Push Docker Image to GCR
# -------------------------------------
  build-and-push:
    name: Build and Push Docker Image to GCR
    runs-on: ubuntu-latest
    needs: ci # Ensures this runs only after build-frontend succeeds

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Frontend Dependencies
        run: |
          cd front
          npm ci

      - name: Build Frontend
        run: |
          cd front
          npm run build-prod

      # Authenticate to Google Cloud using Workload Identity Federation
      - name: Authenticate with Workload Identity Federation
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

      # Set up gcloud CLI
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: 'latest'

      # Configure Docker to use GCR
      - name: Configure Docker for GCR
        run: |
          gcloud auth configure-docker --quiet

      # Build Docker Image
      - name: Build Docker Image
        run: |
          docker build -t $GCR_IMAGE -f Dockerfile .

      # Push Docker Image to GCR
      - name: Push Docker Image to GCR
        run: |
          docker push $GCR_IMAGE

# -------------------------------------
# Job 3: Deploy to GKE
# -------------------------------------
  deploy-to-gke:
    name: Deploy to GKE
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      # Authenticate to Google Cloud using Workload Identity Federation
      - name: Authenticate with Workload Identity Federation
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

      # Install gke-gcloud-auth-plugin
      - name: Set Up GKE Auth Plugin
        uses: simenandre/setup-gke-gcloud-auth-plugin@v1

      # Set up gcloud CLI
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: 'latest'

      # Configure kubectl
      - name: Get GKE Credentials
        run: |
          gcloud container clusters get-credentials $GKE_CLUSTER --region $GKE_REGION --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Debug Kubernetes Connection
        run: |
          echo "---- Kubernetes Cluster Info ----"
          kubectl cluster-info
          echo "---- Kubernetes Nodes ----"
          kubectl get nodes

      - name: Replace Image in Kubernetes Manifest
        run: |
          sed -i 's|gcr.io/YOUR_PROJECT_ID/codexray:latest|${{ env.GCR_IMAGE }}|g' deploy/k8s/codexray.yaml
          cat deploy/k8s/codexray.yaml    

      - name: Apply Kubernetes Manifest
        run: |
          kubectl apply -f deploy/k8s/codexray.yaml
          kubectl rollout status deployment codexray -n codexray

      - name: Verify Deployment
        run: |
          kubectl get pods -n $GKE_NAMESPACE
          kubectl get svc -n $GKE_NAMESPACE
