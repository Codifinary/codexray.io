# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: codexray

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: clickhouse-pv
  namespace: codexray
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
  storageClassName: standard-rwo

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-pv
  namespace: codexray
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: standard-rwo

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: codexray-pv
  namespace: codexray
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: standard-rwo


---

# ClickHouse Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clickhouse
  namespace: codexray
spec:
  replicas: 1
  selector:
    matchLabels:
      app: clickhouse
  template:
    metadata:
      labels:
        app: clickhouse
    spec:
      containers:
        - name: clickhouse
          image: clickhouse/clickhouse-server:24.3
          ports:
            - containerPort: 9000
          volumeMounts:
            - name: clickhouse-pv
              mountPath: /var/lib/clickhouse
              subPath: data
            - name: clickhouse-pv
              mountPath: /var/log/clickhouse-server
              subPath: logs
      volumes:
        - name: clickhouse-pv
          persistentVolumeClaim:
            claimName: clickhouse-pv

---
apiVersion: v1
kind: Service
metadata:
  name: clickhouse
  namespace: codexray
spec:
  selector:
    app: clickhouse
  ports:
    - name: clickhouse
      port: 9000
      targetPort: 9000
    - name: clickhouse-playground
      port: 8123
      targetPort: 8123   

  type: NodePort

---
# Prometheus ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: codexray
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

      - job_name: 'kube-state-metrics'
        static_configs:
          - targets: ['kube-state-metrics.codexray.svc.cluster.local:8080']

      - job_name: 'microservices'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace]
            action: keep
            regex: codexray
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            target_label: __address__
            regex: (.+)
            replacement: $1

---

# Prometheus Deployment (Updated to use the ConfigMap)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: codexray
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      securityContext:
        fsGroup: 65534   # Group ID for "nobody"
        runAsUser: 65534 # User ID for "nobody"
        runAsGroup: 65534
      containers:
        - name: prometheus
          image: prom/prometheus:v2.45.4
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus"
            - "--web.enable-lifecycle"
            - "--web.enable-remote-write-receiver"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus
            - name: prometheus-data
              mountPath: /prometheus
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
        - name: prometheus-data
          persistentVolumeClaim:
            claimName: prometheus-pv

---

# Prometheus Service
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: codexray
spec:
  selector:
    app: prometheus
  ports:
    - port: 9090
      targetPort: 9090
  type: NodePort

---

# Codexray Backend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: codexray
  namespace: codexray
spec:
  replicas: 1
  selector:
    matchLabels:
      app: codexray
  template:
    metadata:
      labels:
        app: codexray
    spec:
      containers:
        - name: codexray
          #image: ghcr.io/coroot/coroot:latest
          image: gcr.io/analog-button-445616-k0/codexray:latest

          args:
            - '--data-dir=/data'
            - '--bootstrap-prometheus-url=http://prometheus:9090'
            - '--bootstrap-refresh-interval=15s'
            - '--bootstrap-clickhouse-address=clickhouse:9000'
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: codexray-data
              mountPath: /data
      volumes:
        - name: codexray-data
          persistentVolumeClaim:
            claimName: codexray-pv

---
apiVersion: v1
kind: Service
metadata:
  name: codexray
  namespace: codexray
spec:
  selector:
    app: codexray
  ports:
    - port: 8080
      targetPort: 8080
  type: NodePort


---

# Node Agent DaemonSet (Using `emptyDir` for Demo Purposes)
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-agent
  namespace: codexray
spec:
  selector:
    matchLabels:
      app: node-agent
  template:
    metadata:
      labels:
        app: node-agent
    spec:
      hostNetwork: false
      hostPID: true
      containers:
        - name: node-agent
          image: gcr.io/analog-button-445616-k0/codexray-node-agent:latest
          args:
            - '--collector-endpoint=http://codexray.codexray.svc.cluster.local:8080'
            - '--cgroupfs-root=/host/sys/fs/cgroup'
            - '--wal-dir=/data'
          securityContext:
            privileged: true
            runAsUser: 0
            runAsGroup: 0
            readOnlyRootFilesystem: false
          ports:
            - name: metrics
              containerPort: 10300
              hostPort: 10300
              protocol: TCP
          volumeMounts:
            - name: node-agent-data
              mountPath: /data
            - name: sys-tracing
              mountPath: /sys/kernel/tracing
            - name: sys-debug
              mountPath: /sys/kernel/debug
            - name: cgroup
              mountPath: /host/sys/fs/cgroup
      volumes:
        - name: node-agent-data
          emptyDir: {}
        - name: sys-tracing
          hostPath:
            path: /sys/kernel/tracing
        - name: sys-debug
          hostPath:
            path: /sys/kernel/debug
        - name: cgroup
          hostPath:
            path: /sys/fs/cgroup


---
# Codexray Cluster Agent Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cluster-agent
  namespace: codexray
  labels:
    app: cluster-agent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cluster-agent
  template:
    metadata:
      labels:
        app: cluster-agent
    spec:
      containers:
        - name: cluster-agent
          image: gcr.io/analog-button-445616-k0/codexray-cluster-agent:latest
          args:
            - '--coroot-url=http://codexray:8080'
            - '--metrics-scrape-interval=15s'
            - '--metrics-wal-dir=/data'
          volumeMounts:
            - name: cluster-agent-data
              mountPath: /data
      volumes:
        - name: cluster-agent-data
          emptyDir: {}

---

# Cluster Agent Service
apiVersion: v1
kind: Service
metadata:
  name: cluster-agent
  namespace: codexray
spec:
  selector:
    app: cluster-agent
  ports:
    - name: metrics
      port: 10301
      targetPort: 10301
  type: ClusterIP            



---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-pod-reader
subjects:
  - kind: ServiceAccount
    name: default
    namespace: codexray
roleRef:
  kind: ClusterRole
  name: view
  apiGroup: rbac.authorization.k8s.io
