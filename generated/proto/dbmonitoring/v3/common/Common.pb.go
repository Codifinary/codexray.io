//
// Licensed to the Apache Software Foundation (ASF) under one or more
// contributor license agreements.  See the NOTICE file distributed with
// this work for additional information regarding copyright ownership.
// The ASF licenses this file to You under the Apache License, Version 2.0
// (the "License"); you may not use this file except in compliance with
// the License.  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: common/Common.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// In most cases, detect point should be `server` or `client`.
// Even in service mesh, this means `server`/`client` side sidecar
// `proxy` is reserved only.
type DetectPoint int32

const (
	DetectPoint_client DetectPoint = 0
	DetectPoint_server DetectPoint = 1
	DetectPoint_proxy  DetectPoint = 2
)

// Enum value maps for DetectPoint.
var (
	DetectPoint_name = map[int32]string{
		0: "client",
		1: "server",
		2: "proxy",
	}
	DetectPoint_value = map[string]int32{
		"client": 0,
		"server": 1,
		"proxy":  2,
	}
)

func (x DetectPoint) Enum() *DetectPoint {
	p := new(DetectPoint)
	*p = x
	return p
}

func (x DetectPoint) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DetectPoint) Descriptor() protoreflect.EnumDescriptor {
	return file_common_Common_proto_enumTypes[0].Descriptor()
}

func (DetectPoint) Type() protoreflect.EnumType {
	return &file_common_Common_proto_enumTypes[0]
}

func (x DetectPoint) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DetectPoint.Descriptor instead.
func (DetectPoint) EnumDescriptor() ([]byte, []int) {
	return file_common_Common_proto_rawDescGZIP(), []int{0}
}

type KeyStringValuePair struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyStringValuePair) Reset() {
	*x = KeyStringValuePair{}
	mi := &file_common_Common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyStringValuePair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyStringValuePair) ProtoMessage() {}

func (x *KeyStringValuePair) ProtoReflect() protoreflect.Message {
	mi := &file_common_Common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyStringValuePair.ProtoReflect.Descriptor instead.
func (*KeyStringValuePair) Descriptor() ([]byte, []int) {
	return file_common_Common_proto_rawDescGZIP(), []int{0}
}

func (x *KeyStringValuePair) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyStringValuePair) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type CPU struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UsagePercent  float64                `protobuf:"fixed64,2,opt,name=usagePercent,proto3" json:"usagePercent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPU) Reset() {
	*x = CPU{}
	mi := &file_common_Common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPU) ProtoMessage() {}

func (x *CPU) ProtoReflect() protoreflect.Message {
	mi := &file_common_Common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPU.ProtoReflect.Descriptor instead.
func (*CPU) Descriptor() ([]byte, []int) {
	return file_common_Common_proto_rawDescGZIP(), []int{1}
}

func (x *CPU) GetUsagePercent() float64 {
	if x != nil {
		return x.UsagePercent
	}
	return 0
}

type Commands struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Commands      []*Command             `protobuf:"bytes,1,rep,name=commands,proto3" json:"commands,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Commands) Reset() {
	*x = Commands{}
	mi := &file_common_Common_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Commands) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Commands) ProtoMessage() {}

func (x *Commands) ProtoReflect() protoreflect.Message {
	mi := &file_common_Common_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Commands.ProtoReflect.Descriptor instead.
func (*Commands) Descriptor() ([]byte, []int) {
	return file_common_Common_proto_rawDescGZIP(), []int{2}
}

func (x *Commands) GetCommands() []*Command {
	if x != nil {
		return x.Commands
	}
	return nil
}

type Command struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Command       string                 `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	Args          []*KeyStringValuePair  `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Command) Reset() {
	*x = Command{}
	mi := &file_common_Common_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_common_Common_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_common_Common_proto_rawDescGZIP(), []int{3}
}

func (x *Command) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *Command) GetArgs() []*KeyStringValuePair {
	if x != nil {
		return x.Args
	}
	return nil
}

var File_common_Common_proto protoreflect.FileDescriptor

const file_common_Common_proto_rawDesc = "" +
	"\n" +
	"\x13common/Common.proto\"<\n" +
	"\x12KeyStringValuePair\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\")\n" +
	"\x03CPU\x12\"\n" +
	"\fusagePercent\x18\x02 \x01(\x01R\fusagePercent\"0\n" +
	"\bCommands\x12$\n" +
	"\bcommands\x18\x01 \x03(\v2\b.CommandR\bcommands\"L\n" +
	"\aCommand\x12\x18\n" +
	"\acommand\x18\x01 \x01(\tR\acommand\x12'\n" +
	"\x04args\x18\x02 \x03(\v2\x13.KeyStringValuePairR\x04args*0\n" +
	"\vDetectPoint\x12\n" +
	"\n" +
	"\x06client\x10\x00\x12\n" +
	"\n" +
	"\x06server\x10\x01\x12\t\n" +
	"\x05proxy\x10\x02B\x80\x01\n" +
	"+org.apache.skywalking.apm.network.common.v3P\x01Z/codexray/generated/proto/dbmonitoring/v3/common\xaa\x02\x1dSkyWalking.NetworkProtocol.V3b\x06proto3"

var (
	file_common_Common_proto_rawDescOnce sync.Once
	file_common_Common_proto_rawDescData []byte
)

func file_common_Common_proto_rawDescGZIP() []byte {
	file_common_Common_proto_rawDescOnce.Do(func() {
		file_common_Common_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_common_Common_proto_rawDesc), len(file_common_Common_proto_rawDesc)))
	})
	return file_common_Common_proto_rawDescData
}

var file_common_Common_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_common_Common_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_common_Common_proto_goTypes = []any{
	(DetectPoint)(0),           // 0: DetectPoint
	(*KeyStringValuePair)(nil), // 1: KeyStringValuePair
	(*CPU)(nil),                // 2: CPU
	(*Commands)(nil),           // 3: Commands
	(*Command)(nil),            // 4: Command
}
var file_common_Common_proto_depIdxs = []int32{
	4, // 0: Commands.commands:type_name -> Command
	1, // 1: Command.args:type_name -> KeyStringValuePair
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_common_Common_proto_init() }
func file_common_Common_proto_init() {
	if File_common_Common_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_common_Common_proto_rawDesc), len(file_common_Common_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_Common_proto_goTypes,
		DependencyIndexes: file_common_Common_proto_depIdxs,
		EnumInfos:         file_common_Common_proto_enumTypes,
		MessageInfos:      file_common_Common_proto_msgTypes,
	}.Build()
	File_common_Common_proto = out.File
	file_common_Common_proto_goTypes = nil
	file_common_Common_proto_depIdxs = nil
}
