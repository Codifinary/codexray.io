// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: dbm/query.proto

package dbm

import (
	common "codexray/generated/proto/dbmonitoring/v3/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryDetails struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Query               string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Service             string                 `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	ExecutionTime       float64                `protobuf:"fixed64,3,opt,name=executionTime,proto3" json:"executionTime,omitempty"`
	TimeStamp           int64                  `protobuf:"varint,4,opt,name=timeStamp,proto3" json:"timeStamp,omitempty"`
	DatabaseName        string                 `protobuf:"bytes,5,opt,name=databaseName,proto3" json:"databaseName,omitempty"`
	LastExecuted        int64                  `protobuf:"varint,6,opt,name=lastExecuted,proto3" json:"lastExecuted,omitempty"`
	SqlId               string                 `protobuf:"bytes,7,opt,name=sqlId,proto3" json:"sqlId,omitempty"`
	QueryDeadlockStatus string                 `protobuf:"bytes,8,opt,name=queryDeadlockStatus,proto3" json:"queryDeadlockStatus,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *QueryDetails) Reset() {
	*x = QueryDetails{}
	mi := &file_dbm_query_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDetails) ProtoMessage() {}

func (x *QueryDetails) ProtoReflect() protoreflect.Message {
	mi := &file_dbm_query_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDetails.ProtoReflect.Descriptor instead.
func (*QueryDetails) Descriptor() ([]byte, []int) {
	return file_dbm_query_proto_rawDescGZIP(), []int{0}
}

func (x *QueryDetails) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *QueryDetails) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *QueryDetails) GetExecutionTime() float64 {
	if x != nil {
		return x.ExecutionTime
	}
	return 0
}

func (x *QueryDetails) GetTimeStamp() int64 {
	if x != nil {
		return x.TimeStamp
	}
	return 0
}

func (x *QueryDetails) GetDatabaseName() string {
	if x != nil {
		return x.DatabaseName
	}
	return ""
}

func (x *QueryDetails) GetLastExecuted() int64 {
	if x != nil {
		return x.LastExecuted
	}
	return 0
}

func (x *QueryDetails) GetSqlId() string {
	if x != nil {
		return x.SqlId
	}
	return ""
}

func (x *QueryDetails) GetQueryDeadlockStatus() string {
	if x != nil {
		return x.QueryDeadlockStatus
	}
	return ""
}

var File_dbm_query_proto protoreflect.FileDescriptor

const file_dbm_query_proto_rawDesc = "" +
	"\n" +
	"\x0fdbm/query.proto\x12\x11dbm.skywalking.v3\x1a\x13common/Common.proto\"\x92\x02\n" +
	"\fQueryDetails\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x12\x18\n" +
	"\aservice\x18\x02 \x01(\tR\aservice\x12$\n" +
	"\rexecutionTime\x18\x03 \x01(\x01R\rexecutionTime\x12\x1c\n" +
	"\ttimeStamp\x18\x04 \x01(\x03R\ttimeStamp\x12\"\n" +
	"\fdatabaseName\x18\x05 \x01(\tR\fdatabaseName\x12\"\n" +
	"\flastExecuted\x18\x06 \x01(\x03R\flastExecuted\x12\x14\n" +
	"\x05sqlId\x18\a \x01(\tR\x05sqlId\x120\n" +
	"\x13queryDeadlockStatus\x18\b \x01(\tR\x13queryDeadlockStatus2Q\n" +
	"\x0fDbmQueryService\x12>\n" +
	"\fcollectQuery\x12\x1f.dbm.skywalking.v3.QueryDetails\x1a\t.Commands\"\x00(\x01Bz\n" +
	"(org.apache.skywalking.apm.network.dbm.v3P\x01Z,codexray/generated/proto/dbmonitoring/v3/dbm\xaa\x02\x1dSkyWalking.NetworkProtocol.V3b\x06proto3"

var (
	file_dbm_query_proto_rawDescOnce sync.Once
	file_dbm_query_proto_rawDescData []byte
)

func file_dbm_query_proto_rawDescGZIP() []byte {
	file_dbm_query_proto_rawDescOnce.Do(func() {
		file_dbm_query_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_dbm_query_proto_rawDesc), len(file_dbm_query_proto_rawDesc)))
	})
	return file_dbm_query_proto_rawDescData
}

var file_dbm_query_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_dbm_query_proto_goTypes = []any{
	(*QueryDetails)(nil),    // 0: dbm.skywalking.v3.QueryDetails
	(*common.Commands)(nil), // 1: Commands
}
var file_dbm_query_proto_depIdxs = []int32{
	0, // 0: dbm.skywalking.v3.DbmQueryService.collectQuery:input_type -> dbm.skywalking.v3.QueryDetails
	1, // 1: dbm.skywalking.v3.DbmQueryService.collectQuery:output_type -> Commands
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_dbm_query_proto_init() }
func file_dbm_query_proto_init() {
	if File_dbm_query_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_dbm_query_proto_rawDesc), len(file_dbm_query_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dbm_query_proto_goTypes,
		DependencyIndexes: file_dbm_query_proto_depIdxs,
		MessageInfos:      file_dbm_query_proto_msgTypes,
	}.Build()
	File_dbm_query_proto = out.File
	file_dbm_query_proto_goTypes = nil
	file_dbm_query_proto_depIdxs = nil
}
